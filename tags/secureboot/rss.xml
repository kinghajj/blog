<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>kinghajj&#x27;s blog(?) or whatever</title>
        <link>https://kinghajj.github.io/blog</link>
        <description>Whatever I feel like sharing</description>
        <generator>Zola</generator>
        <language>en</language>
        <atom:link href="https://kinghajj.github.io/blog/tags/secureboot/rss.xml" rel="self" type="application/rss+xml"/>
        <lastBuildDate>Wed, 24 Jun 2020 00:00:00 +0000</lastBuildDate>
        
            <item>
                <title>Undervolting with SecureBoot in Linux</title>
                <pubDate>Wed, 24 Jun 2020 00:00:00 +0000</pubDate>
                <link>https://kinghajj.github.io/blog/undervolting-with-secureboot-in-linux/</link>
                <guid>https://kinghajj.github.io/blog/undervolting-with-secureboot-in-linux/</guid>
                <description>&lt;p&gt;Many laptop users choose to undervolt their machines. This decreases thermal output, which, in turn, can increase program performance, since modern CPUs will automatically adjust their operating frequency depending on the available thermal headroom. Undervolting tools exist for all major operating systems; they typically require administrator rights, but otherwise are easy to use. In Linux, however, things aren&#x27;t quite so simple: recent versions of the kernel prohibit the mechanism used for undervolting Intel CPUs when SecureBoot is enabled. The most common way around this, unsurprisingly, is just to disable SecureBoot. With a bit of work, though, it is possible to keep SecureBoot enabled, but allow controlled access to the undervolting mechanism.&lt;&#x2F;p&gt;
</description>
            </item>
        
    </channel>
</rss>
